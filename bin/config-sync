#!/usr/bin/env php
<?php

declare(strict_types=1);

use MohammadAlavi\ConfigSync\ConfigSyncPlugin;

// ---------------------------------------------------------------------
//  Locate Composer's autoloader no matter where this package sits.
// ---------------------------------------------------------------------
$autoloadCandidates = [
    // 1. When executed from vendor/bin <symlink>
    __DIR__ . '/../../../autoload.php',          // project‑root/vendor/autoload.php

    // 2. When executed inside the package repo itself (dev‑mode)
    __DIR__ . '/../vendor/autoload.php',         // package‑root/vendor/autoload.php
];

foreach ($autoloadCandidates as $candidate) {
    if (file_exists($candidate)) {
        require $candidate;
        break;
    }
}

if (!class_exists(ConfigSyncPlugin::class)) {
    fwrite(STDERR, "Unable to locate Composer autoload.php — aborting.\n");
    exit(1);
}

// ---------------------------------------------------------------------
//  Generate config‑sync.json with defaults (unless it already exists)
// ---------------------------------------------------------------------
$root = getcwd();
$target = $root . '/config-sync.json';

if (file_exists($target)) {
    fwrite(STDERR, "config-sync.json already exists — aborting.\n");
    exit(1);
}

$config = ConfigSyncPlugin::DEFAULT_CONFIG;
$schemaRelative = ConfigSyncPlugin::SCHEMA_URL;

$output = array_merge([
    '$schema' => $schemaRelative,
], $config);

file_put_contents(
    $target,
    json_encode($output, JSON_THROW_ON_ERROR | JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES) . PHP_EOL,
);

echo "Created config-sync.json with default values. You can now override whatever you need.\n";
